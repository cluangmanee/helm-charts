image:
  # image.repository -- image repository
  repository: gitlab/gitlab-ee
  # image.tag -- image tag (chart's appVersion value will be used if not set)
  tag: ""
  # image.pullPolicy -- image pull policy
  pullPolicy: IfNotPresent

# imagePullSecrets -- image pull secret for private images
imagePullSecrets: []
# nameOverride -- override name of the chart
nameOverride: ""
# fullnameOverride -- full name of the chart.
fullnameOverride: ""

serviceAccount:
  # serviceAccount.create -- specifies whether a service account should be created
  create: false
  # serviceAccount.annotations -- annotations to add to the service account
  annotations: {}
  # serviceAccount.name -- the name of the service account to use; if not set and create is true, a name is generated using the fullname template
  name:

# podSecurityContext -- specifies security settings for a pod
podSecurityContext: {}
#  fsGroup: 2000

# securityContext -- specifies security settings for a container
securityContext: {}
#  privileged: true

# containerPorts -- ports exposed by the container
containerPorts:
  - name: http
    containerPort: 8005
  - name: ssh
    containerPort: 22

service:
  # service.type -- service type
  type: ClusterIP
  # service.loadBalancerIP -- load balancer IP
  loadBalancerIP: null
  # service.ports -- service ports
  ports:
    - name: http
      port: 80
      targetPort: http
    - name: ssh
      port: 22
      targetPort: ssh
  # service.annotations -- service annotations
  annotations: {}
  # static-ip: gitlab

# stsAnnotations -- annotations to add to the statefulset
stsAnnotations: { }

# resources -- custom resource configuration
resources: {}
#  limits:
#    cpu: 100m
#    memory: 128Mi
#  requests:
#    cpu: 100m
#    memory: 128Mi

# nodeSelector -- node for scheduler pod assignment
nodeSelector: {}

# tolerations -- tolerations for scheduler pod assignment
tolerations: []

# affinity -- affinity for scheduler pod assignment
affinity: {}

# volumeMounts -- additional volume mounts
volumeMounts: []
#  - name: ssh
#    mountPath: /var/opt/gitlab/.ssh
#  - name: git-data
#    mountPath: /var/opt/gitlab/git-data
#  - name: gitlab
#    mountPath: /etc/gitlab
#  - name: tmp
#    mountPath: /opt/tmp
#  - name: logs
#    mountPath: /var/log/gitlab

# volumes -- volumes
volumes: []
#  - name: logs
#    emptyDir: {}
#  - name: tmp
#    emptyDir: {}

# volumeClaimTemplates -- volume claim templates
volumeClaimTemplates: []
#  - apiVersion: v1
#    kind: PersistentVolumeClaim
#    metadata:
#      name: ssh
#    spec:
#      accessModes:
#        - ReadWriteOnce
#      resources:
#        requests:
#          storage: 1Gi
#  - apiVersion: v1
#    kind: PersistentVolumeClaim
#    metadata:
#      name: git-data
#    spec:
#      accessModes:
#        - ReadWriteOnce
#      resources:
#        requests:
#          storage: 100Gi
#  - apiVersion: v1
#    kind: PersistentVolumeClaim
#    metadata:
#      name: gitlab
#    spec:
#      accessModes:
#        - ReadWriteOnce
#      resources:
#        requests:
#          storage: 1Gi

# disableProbes -- flag to disable livenessProbe/readinessProbe/startupProbe probes; turn on before restoring from backup
disableProbes: false

# healthCheckToken -- predefined health check token for status probes; should be changed to a random value
healthCheckToken: CHANGE_ME

# postReconfigureCode -- ruby code block for GITLAB_POST_RECONFIGURE_CODE
postReconfigureCode: ""

# env -- environment variables for the container
env: []
#  - name: PG_USER
#    value: postgres
#  - name: PG_PASSWORD
#      valueFrom:
#        secretKeyRef:
#          name: gitlab-pg
#          key: postgres-password
#  - name: GITLAB_INITIAL_ROOT_PASSWORD
#      valueFrom:
#        secretKeyRef:
#          name: gitlab-pw
#          key: root-password
#  - name: GITLAB_RUNNER_TOKEN
#      valueFrom:
#        secretKeyRef:
#          name: gitlab-pw
#          key: runner-token

# envFrom -- environment variable sources for the container
envFrom: []
#  - configMapRef:
#      name: gitlab-cm

# additionalResources -- list of additional resources to create (are processed via `tpl` function)
additionalResources: []
# - |
#   apiVersion: v1
#   kind: ConfigMap
#   metadata:
#     name: {{ include "gitlab.fullname" . }}-cm
#     namespace: {{ .Release.Namespace }}
#
# - |
#    apiVersion: v1
#    kind: Secret
#    metadata:
#      name: {{ include "gitlab.fullname" . }}-s
#      namespace: {{ .Release.Namespace }}
#    stringData:
#      mykey: my-value

# gitlabConf -- config for gitlab.rb; default values: https://gitlab.com/gitlab-org/omnibus-gitlab/-/blob/15.2.1+ce.0/files/gitlab-config-template/gitlab.rb.template
gitlabConf: |-
  external_url 'https://gitlab.example.com'
  gitlab_rails['gitlab_repository_downloads_path'] = '/opt/tmp/repositories'
  gitlab_rails['object_store']['enabled'] = true
  gitlab_rails['object_store']['connection'] = {
    'provider' => 'AWS',
    'aws_access_key_id' => 'XXX',
    'aws_secret_access_key' => 'XXX',
  }
  gitlab_rails['object_store']['objects']['artifacts']['bucket'] = 'gitlab/artifacts'
  gitlab_rails['object_store']['objects']['external_diffs']['bucket'] = 'gitlab/external_diffs'
  gitlab_rails['object_store']['objects']['lfs']['bucket'] = 'gitlab/lfs'
  gitlab_rails['object_store']['objects']['uploads']['bucket'] = 'gitlab/uploads'
  gitlab_rails['object_store']['objects']['packages']['bucket'] = 'gitlab/packages'
  gitlab_rails['object_store']['objects']['dependency_proxy']['bucket'] = 'gitlab/dependency_proxy'
  gitlab_rails['object_store']['objects']['terraform_state']['bucket'] = 'gitlab/terraform_state'
  gitlab_rails['object_store']['objects']['ci_secure_files']['bucket'] = 'gitlab/ci_secure_files'
  gitlab_rails['external_diffs_enabled'] = true
  gitlab_rails['external_diffs_when'] = 'outdated'
  gitlab_rails['shared_path'] = '/opt/tmp/shared'
  gitlab_rails['backup_path'] = "/opt/tmp/backups"
  gitlab_rails['backup_upload_connection'] = {
    'provider' => 'AWS',
    'aws_access_key_id' => 'XXX',
    'aws_secret_access_key' => 'XXX',
  }
  gitlab_rails['backup_upload_remote_directory'] = 'gitlab/backups'
  gitlab_rails['uploads_directory'] = "/opt/tmp/uploads"
  gitlab_rails['initial_root_password'] = ENV['GITLAB_INITIAL_ROOT_PASSWORD']
  gitlab_rails['initial_shared_runners_registration_token'] = ENV['GITLAB_RUNNER_TOKEN']
  gitlab_rails['db_adapter'] = "postgresql"
  gitlab_rails['db_database'] = "gitlab"
  gitlab_rails['db_username'] = ENV['PG_USER']
  gitlab_rails['db_password'] = ENV['PG_PASSWORD']
  gitlab_rails['db_host'] = "gitlab-postgres"
  gitlab_rails['db_port'] = 5432
  gitlab_rails['redis_host'] = "gitlab-redis-master"
  gitlab_rails['redis_port'] = 6379
  gitlab_rails['registry_enabled'] = false
  registry['enable'] = false
  gitlab_workhorse['listen_network'] = "tcp"
  gitlab_workhorse['listen_addr'] = "0.0.0.0:8005"
  sidekiq['metrics_enabled'] = false
  sidekiq['health_checks_enabled'] = false
  postgresql['enable'] = false
  redis['enable'] = false
  nginx['enable'] = false
  pages_nginx['enable'] = false
  gitlab_ci['builds_directory'] = '/opt/tmp/ci-builds'
  gitlab_rails['gitlab_kas_enabled'] = false
  gitlab_kas['enable'] = false
  monitoring_role['enable'] = false
  prometheus['enable'] = false
  prometheus_monitoring['enable'] = false
  alertmanager['enable'] = false
  grafana['enable'] = false
  gitlab_exporter['enable'] = false
  gitlab_rails['packages_enabled'] = false
  gitlab_rails['dependency_proxy_enabled'] = false

backupCronJob:
  # backupCronJob.enabled -- enable scheduled backups
  enabled: true
  # backupCronJob.podAnnotations -- pod annotations
  podAnnotations: { }
  # backupCronJob.schedule -- how often to run backaup job
  schedule: "@daily"
  # backupCronJob.image -- image
  image: daedalusproject/base_kubectl
  # backupCronJob.command -- command to execute in gitlab container
  command:
    - gitlab-backup
    - create
    - SKIP=uploads,builds,artifacts,terraform_state,registry,pages,packages
    - GZIP_RSYNCABLE=yes
    - STRATEGY=copy
  # backupCronJob.resources -- custom resource configuration
  resources:
    requests:
      cpu: 10m
      memory: 32Mi
  #  limits:
  #    cpu: 100m
  #    memory: 128Mi
