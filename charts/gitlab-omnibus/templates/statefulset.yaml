apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "gitlab.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "gitlab.labels" . | nindent 4 }}
{{- with .Values.stsAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
{{- end }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "gitlab.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "gitlab.fullname" . }}
  template:
    metadata:
      labels:
        {{- include "gitlab.selectorLabels" . | nindent 8 }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "gitlab.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ include "gitlab.tag" . }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
        {{- with .Values.containerPorts }}
          ports:
            {{- toYaml . | nindent 12 }}
        {{- end }}
        {{- if not .Values.disableProbes }}
          livenessProbe:
            httpGet:
              path: /-/liveness?token={{.Values.healthCheckToken}}
              port: http
          readinessProbe:
            httpGet:
              path: /-/readiness?token={{.Values.healthCheckToken}}
              port: http
          startupProbe:
            initialDelaySeconds: 60
            failureThreshold: 300
            periodSeconds: 2
            httpGet:
              path: /-/readiness?token={{.Values.healthCheckToken}}
              port: http
        {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: GITLAB_OMNIBUS_CONFIG
              value: 'from_file "/etc/gitlab-provisioned-config.rb"'
            - name: GITLAB_POST_RECONFIGURE_CODE
              value: |
                include Gitlab::CurrentSettings
                Gitlab::CurrentSettings.current_application_settings.update_attribute(:health_check_access_token, '{{.Values.healthCheckToken}}')
                {{- .Values.postReconfigureCode | nindent 16 }}
            - name: GITLAB_POST_RECONFIGURE_SCRIPT
              value: |
                /opt/gitlab/bin/gitlab-rails runner -e production "$GITLAB_POST_RECONFIGURE_CODE"
          {{- with .Values.env }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
        {{- with .Values.envFrom }}
          envFrom:
          {{- toYaml . | nindent 12 }}
        {{- end }}
          volumeMounts:
            - name: provisioned-config
              mountPath: /etc/gitlab-provisioned-config.rb
              subPath: gitlab.rb
        {{- with .Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
        {{- end }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
        - name: provisioned-config
          secret:
            secretName: {{ include "gitlab.fullname" . }}
            items:
              - key: gitlab.rb
                path: gitlab.rb
                mode: 292 # 0444
      {{- with .Values.volumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- with .Values.volumeClaimTemplates }}
  volumeClaimTemplates:
    {{- toYaml . | nindent 4 }}
{{- end }}
