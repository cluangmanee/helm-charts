operator:
  image:
    # operator.image.repository -- image repository
    repository: altinity/clickhouse-operator
    # operator.image.tag -- image tag (chart's appVersion value will be used if not set)
    tag: ""
    # operator.image.pullPolicy -- image pull policy
    pullPolicy: IfNotPresent
  # operator.resources -- custom resource configuration
  resources: {}
  #  limits:
  #    cpu: 100m
  #    memory: 128Mi
  #  requests:
  #    cpu: 100m
  #    memory: 128Mi
  # operator.env -- additional environment variables for the deployment
  env: []
  #  - name: SAMPLE
  #    value: text
metrics:
  image:
    # metrics.image.repository -- image repository
    repository: altinity/metrics-exporter
    # metrics.image.tag -- image tag (chart's appVersion value will be used if not set)
    tag: ""
    # metrics.image.pullPolicy -- image pull policy
    pullPolicy: IfNotPresent
  # metrics.resources -- custom resource configuration
  resources: {}
  #  limits:
  #    cpu: 100m
  #    memory: 128Mi
  #  requests:
  #    cpu: 100m
  #    memory: 128Mi
  # metrics.env -- additional environment variables for the deployment
  env: []
  #  - name: SAMPLE
  #    value: text
# imagePullSecrets -- image pull secret for private images
imagePullSecrets: []
# podAnnotations -- annotations to add to the pod
podAnnotations:
  prometheus.io/port: '8888'
  prometheus.io/scrape: 'true'
# nameOverride -- override name of the chart
nameOverride: ""
# fullnameOverride -- full name of the chart.
fullnameOverride: ""
serviceAccount:
  # serviceAccount.create -- specifies whether a service account should be created
  create: true
  # serviceAccount.annotations -- annotations to add to the service account
  annotations: {}
  # serviceAccount.name -- the name of the service account to use; if not set and create is true, a name is generated using the fullname template
  name:
# nodeSelector -- node for scheduler pod assignment
nodeSelector: {}
# tolerations -- tolerations for scheduler pod assignment
tolerations: []
# affinity -- affinity for scheduler pod assignment
affinity: {}
serviceMonitor:
  # serviceMonitor.enabled -- ServiceMonitor CRD is created for a prometheus operator
  enabled: false
  # serviceMonitor.additionalLabels -- additional labels for service monitor
  additionalLabels: {}
# configs -- overrides operator default configmaps
configs:
  confdFiles: null
  configdFiles:
    01-clickhouse-01-listen.xml: |
      <!-- IMPORTANT -->
      <!-- This file is auto-generated -->
      <!-- Do not edit this file - all changes would be lost -->
      <!-- Edit appropriate template in the following folder: -->
      <!-- deploy/builder/templates-config -->
      <!-- IMPORTANT -->
      <yandex>
          <!-- Listen wildcard address to allow accepting connections from other containers and host network. -->
          <listen_host>::</listen_host>
          <listen_host>0.0.0.0</listen_host>
          <listen_try>1</listen_try>
      </yandex>
    01-clickhouse-02-logger.xml: |
      <!-- IMPORTANT -->
      <!-- This file is auto-generated -->
      <!-- Do not edit this file - all changes would be lost -->
      <!-- Edit appropriate template in the following folder: -->
      <!-- deploy/builder/templates-config -->
      <!-- IMPORTANT -->
      <yandex>
          <logger>
              <!-- Possible levels: https://github.com/pocoproject/poco/blob/develop/Foundation/include/Poco/Logger.h#L105 -->
              <level>debug</level>
              <log>/var/log/clickhouse-server/clickhouse-server.log</log>
              <errorlog>/var/log/clickhouse-server/clickhouse-server.err.log</errorlog>
              <size>1000M</size>
              <count>10</count>
              <!-- Default behavior is autodetection (log to console if not daemon mode and is tty) -->
              <console>1</console>
          </logger>
      </yandex>
    01-clickhouse-03-query_log.xml: |
      <!-- IMPORTANT -->
      <!-- This file is auto-generated -->
      <!-- Do not edit this file - all changes would be lost -->
      <!-- Edit appropriate template in the following folder: -->
      <!-- deploy/builder/templates-config -->
      <!-- IMPORTANT -->
      <yandex>
          <query_log replace="1">
              <database>system</database>
              <table>query_log</table>
              <engine>Engine = MergeTree PARTITION BY event_date ORDER BY event_time TTL event_date + interval 30 day</engine>
              <flush_interval_milliseconds>7500</flush_interval_milliseconds>
          </query_log>
          <query_thread_log remove="1"/>
      </yandex>
    01-clickhouse-04-part_log.xml: |-
      <!-- IMPORTANT -->
      <!-- This file is auto-generated -->
      <!-- Do not edit this file - all changes would be lost -->
      <!-- Edit appropriate template in the following folder: -->
      <!-- deploy/builder/templates-config -->
      <!-- IMPORTANT -->
      <yandex>
          <part_log replace="1">
              <database>system</database>
              <table>part_log</table>
              <engine>Engine = MergeTree PARTITION BY event_date ORDER BY event_time TTL event_date + interval 30 day</engine>
              <flush_interval_milliseconds>7500</flush_interval_milliseconds>
          </part_log>
      </yandex>
  files:
    config.yaml: |-
      # IMPORTANT
      # This file is auto-generated
      # Do not edit this file - all changes would be lost
      # Edit appropriate template in the following folder:
      # deploy/builder/templates-config
      # IMPORTANT
      #
      # Template parameters available:
      #   watchNamespaces
      #   chUsername
      #   chPassword
      #   password_sha256_hex

      ################################################
      ##
      ## Watch Section
      ##
      ################################################
      watch:
        # List of namespaces where clickhouse-operator watches for events.
        # Concurrently running operators should watch on different namespaces
        #namespaces: ["dev", "test"]
        namespaces: []

      clickhouse:
        configuration:
          ################################################
          ##
          ## Configuration Files Section
          ##
          ################################################
          file:
            path:
              # Path to the folder where ClickHouse configuration files common for all instances within a CHI are located.
              common: config.d
              # Path to the folder where ClickHouse configuration files unique for each instance (host) within a CHI are located.
              host: conf.d
              # Path to the folder where ClickHouse configuration files with users settings are located.
              # Files are common for all instances within a CHI.
              user: users.d
          ################################################
          ##
          ## Configuration Users Section
          ##
          ################################################
          user:
            default:
              # Default values for ClickHouse user configuration
              # 1. user/profile - string
              # 2. user/quota - string
              # 3. user/networks/ip - multiple strings
              # 4. user/password - string
              profile: default
              quota: default
              networksIP:
                - "::1"
                - "127.0.0.1"
              password: "default"
          ################################################
          ##
          ## Configuration Network Section
          ##
          ################################################
          network:
            # Default host_regexp to limit network connectivity from outside
            hostRegexpTemplate: "(chi-{chi}-[^.]+\\d+-\\d+|clickhouse\\-{chi})\\.{namespace}\\.svc\\.cluster\\.local$"
        ################################################
        ##
        ## Access to ClickHouse instances
        ##
        ################################################
        access:
          # ClickHouse credentials (username, password and port) to be used by operator to connect to ClickHouse instances
          # for:
          # 1. Metrics requests
          # 2. Schema maintenance
          # 3. DROP DNS CACHE
          # User with such credentials can be specified in additional ClickHouse .xml config files,
          # located in `chUsersConfigsPath` folder
          username: "clickhouse_operator"
          password: "clickhouse_operator_password"
          secret:
            # Location of k8s Secret with username and password to be used by operator to connect to ClickHouse instances
            # Can be used instead of explicitly specified username and password
            namespace: ""
            name: ""
          # Port where to connect to ClickHouse instances to
          port: 8123

      ################################################
      ##
      ## Templates Section
      ##
      ################################################
      template:
        chi:
          # Path to the folder where ClickHouseInstallation .yaml manifests are located.
          # Manifests are applied in sorted alpha-numeric order.
          path: templates.d

      ################################################
      ##
      ## Reconcile Section
      ##
      ################################################
      reconcile:
        runtime:
          # Max number of concurrent reconciles in progress
          threadsNumber: 10

        statefulSet:
          create:
            # What to do in case created StatefulSet is not in Ready after `statefulSetUpdateTimeout` seconds
            # Possible options:
            # 1. abort - do nothing, just break the process and wait for admin
            # 2. delete - delete newly created problematic StatefulSet
            # 3. ignore - ignore error, pretend nothing happened and move on to the next StatefulSet
            onFailure: ignore

          update:
            # How many seconds to wait for created/updated StatefulSet to be Ready
            timeout: 300
            # How many seconds to wait between checks for created/updated StatefulSet status
            pollInterval: 5
            # What to do in case updated StatefulSet is not in Ready after `statefulSetUpdateTimeout` seconds
            # Possible options:
            # 1. abort - do nothing, just break the process and wait for admin
            # 2. rollback - delete Pod and rollback StatefulSet to previous Generation.
            # Pod would be recreated by StatefulSet based on rollback-ed configuration
            # 3. ignore - ignore error, pretend nothing happened and move on to the next StatefulSet
            onFailure: rollback

        host:
          # Whether reconciler should wait for host:
          # to be excluded from cluster OR
          # to be included into cluster
          # respectfully
          wait:
            exclude: true
            include: false

      ################################################
      ##
      ## Annotations management
      ##
      ################################################
      annotation:
        # Applied when:
        #  1. Propagating annotations from the CHI's `metadata.annotations` to child objects' `metadata.annotations`,
        #  2. Propagating annotations from the CHI Template's `metadata.annotations` to CHI's `metadata.annotations`,
        # Include annotations from the following list:
        # Applied only when not empty. Empty list means "include all, no selection"
        include: []
        # Exclude annotations from the following list:
        exclude: []

      ################################################
      ##
      ## Labels management
      ##
      ################################################
      label:
        # Applied when:
        #  1. Propagating labels from the CHI's `metadata.labels` to child objects' `metadata.labels`,
        #  2. Propagating labels from the CHI Template's `metadata.labels` to CHI's `metadata.labels`,
        # Include labels from the following list:
        # Applied only when not empty. Empty list means "include all, no selection"
        include: []
        # Exclude labels from the following list:
        exclude: []
        # Whether to append *Scope* labels to StatefulSet and Pod.
        # Full list of available *scope* labels check in labeler.go
        #  LabelShardScopeIndex
        #  LabelReplicaScopeIndex
        #  LabelCHIScopeIndex
        #  LabelCHIScopeCycleSize
        #  LabelCHIScopeCycleIndex
        #  LabelCHIScopeCycleOffset
        #  LabelClusterScopeIndex
        #  LabelClusterScopeCycleSize
        #  LabelClusterScopeCycleIndex
        #  LabelClusterScopeCycleOffset
        appendScope: "no"

      ################################################
      ##
      ## StatefulSet management
      ##
      ################################################
      statefulSet:
        revisionHistoryLimit: 0

      ################################################
      ##
      ## Pod management
      ##
      ################################################
      pod:
        # Grace period for Pod termination.
        # How many seconds to wait between sending
        # SIGTERM and SIGKILL during Pod termination process.
        # Increase this number is case of slow shutdown.
        terminationGracePeriod: 30

      ################################################
      ##
      ## Log parameters
      ##
      ################################################
      logger:
        logtostderr: "true"
        alsologtostderr: "false"
        v: "1"
        stderrthreshold: ""
        vmodule: ""
        log_backtrace_at: ""
  templatesdFiles:
    001-templates.json.example: |
      {
        "apiVersion": "clickhouse.altinity.com/v1",
        "kind": "ClickHouseInstallationTemplate",
        "metadata": {
          "name": "01-default-volumeclaimtemplate"
        },
        "spec": {
          "templates": {
            "volumeClaimTemplates": [
              {
                "name": "chi-default-volume-claim-template",
                "spec": {
                  "accessModes": [
                    "ReadWriteOnce"
                  ],
                  "resources": {
                    "requests": {
                      "storage": "2Gi"
                    }
                  }
                }
              }
            ],
            "podTemplates": [
              {
                "name": "chi-default-oneperhost-pod-template",
                "distribution": "OnePerHost",
                "spec": {
                  "containers" : [
                    {
                      "name": "clickhouse",
                      "image": "clickhouse/clickhouse-server:22.3",
                      "ports": [
                        {
                          "name": "http",
                          "containerPort": 8123
                        },
                        {
                          "name": "client",
                          "containerPort": 9000
                        },
                        {
                          "name": "interserver",
                          "containerPort": 9009
                        }
                      ]
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    default-pod-template.yaml.example: |
      apiVersion: "clickhouse.altinity.com/v1"
      kind: "ClickHouseInstallationTemplate"
      metadata:
        name: "default-oneperhost-pod-template"
      spec:
        templates:
          podTemplates:
            - name: default-oneperhost-pod-template
              distribution: "OnePerHost"
    default-storage-template.yaml.example: |
      apiVersion: "clickhouse.altinity.com/v1"
      kind: "ClickHouseInstallationTemplate"
      metadata:
        name: "default-storage-template-2Gi"
      spec:
        templates:
          volumeClaimTemplates:
            - name: default-storage-template-2Gi
              spec:
                accessModes:
                  - ReadWriteOnce
                resources:
                  requests:
                    storage: 2Gi
    readme: |-
      Templates in this folder are packaged with an operator and available via 'useTemplate'
  usersdFiles:
    01-clickhouse-user.xml: |
      <!-- IMPORTANT -->
      <!-- This file is auto-generated -->
      <!-- Do not edit this file - all changes would be lost -->
      <!-- Edit appropriate template in the following folder: -->
      <!-- deploy/builder/templates-config -->
      <!-- IMPORTANT -->
      <yandex>
          <users>
              <clickhouse_operator>
                  <networks>
                      <ip>127.0.0.1</ip>
                  </networks>
                  <password_sha256_hex>716b36073a90c6fe1d445ac1af85f4777c5b7a155cea359961826a030513e448</password_sha256_hex>
                  <profile>clickhouse_operator</profile>
                  <quota>default</quota>
              </clickhouse_operator>
          </users>
          <profiles>
              <clickhouse_operator>
                  <log_queries>0</log_queries>
                  <skip_unavailable_shards>1</skip_unavailable_shards>
                  <http_connection_timeout>10</http_connection_timeout>
              </clickhouse_operator>
          </profiles>
      </yandex>
    02-clickhouse-default-profile.xml: |
      <!-- IMPORTANT -->
      <!-- This file is auto-generated -->
      <!-- Do not edit this file - all changes would be lost -->
      <!-- Edit appropriate template in the following folder: -->
      <!-- deploy/builder/templates-config -->
      <!-- IMPORTANT -->
      <yandex>
        <profiles>
          <default>
            <log_queries>1</log_queries>
            <connect_timeout_with_failover_ms>1000</connect_timeout_with_failover_ms>
            <distributed_aggregation_memory_efficient>1</distributed_aggregation_memory_efficient>
            <parallel_view_processing>1</parallel_view_processing>
          </default>
        </profiles>
      </yandex>
    03-database-ordinary.xml: |-
      <!-- IMPORTANT -->
      <!-- This file is auto-generated -->
      <!-- Do not edit this file - all changes would be lost -->
      <!-- Edit appropriate template in the following folder: -->
      <!-- deploy/builder/templates-config -->
      <!-- IMPORTANT -->
      <!--  Remove it for ClickHouse versions before 20.4 -->
      <yandex>
          <profiles>
              <default>
                  <default_database_engine>Ordinary</default_database_engine>
              </default>
          </profiles>
      </yandex>
# additionalResources -- list of additional resources to create (are processed via `tpl` function)
additionalResources: []
#  - |
#    apiVersion: v1
#    kind: ConfigMap
#    metadata:
#      name: {{ include "altinity-clickhouse-operator.fullname" . }}-cm
#      namespace: {{ .Release.Namespace }}
#  - |
#     apiVersion: v1
#     kind: Secret
#     metadata:
#       name: {{ include "altinity-clickhouse-operator.fullname" . }}-s
#       namespace: {{ .Release.Namespace }}
#     stringData:
#       mykey: my-value

dashboards:
  # dashboards.enabled -- provision https://github.com/Altinity/clickhouse-operator/tree/release-0.19.1/grafana-dashboard as secrets (can be synced by grafana dashboards sidecar https://github.com/grafana/helm-charts/blob/grafana-6.33.1/charts/grafana/values.yaml#L679 )
  enabled: false
  # dashboards.additionalLabels -- labels to add to a secret with dashboards
  additionalLabels: {}
  #  grafana_dashboard: "1"

  # dashboards.annotations -- annotations to add to a secret with dashboards
  annotations: {}
  #  grafana_folder: clickhouse
